import tkinter as tk
from tkinter import messagebox
from datetime import datetime
from threading import Thread
import pygame
import time
from PIL import Image, ImageTk

class AlarmClock:
    def __init__(self, root):
        self.root = root
        self.root.title("Alarm Clock")
        self.root.geometry("400x300")

        # Initialize pygame mixer for sound
        pygame.mixer.init()

        # Add background image
        self.background_image = Image.open("background.jpg")  # Replace with your image path
        self.background_photo = ImageTk.PhotoImage(self.background_image)
        self.background_label = tk.Label(root, image=self.background_photo)
        self.background_label.place(relwidth=1, relheight=1)

        # Add time entry
        self.time_label = tk.Label(root, text="Set Alarm Time (HH:MM:SS):", font=("Arial", 14), bg='light blue')
        self.time_label.pack(pady=10)

        self.time_entry = tk.Entry(root, font=("Arial", 14))
        self.time_entry.pack(pady=10)

        # Add set alarm button
        self.set_alarm_button = tk.Button(root, text="Set Alarm", command=self.set_alarm, font=("Arial", 14))
        self.set_alarm_button.pack(pady=10)

        # Add stop alarm button (to stop the sound)
        self.stop_alarm_button = tk.Button(root, text="Stop Alarm", command=self.stop_alarm, font=("Arial", 14))
        self.stop_alarm_button.pack(pady=10)
        self.stop_alarm_button.config(state=tk.DISABLED)

        # Add current time display
        self.current_time_label = tk.Label(root, text="", font=("Arial", 16), bg='light blue')
        self.current_time_label.pack(pady=10)

        # Start updating the current time
        self.update_current_time()

    def update_current_time(self):
        current_time = datetime.now().strftime("%H:%M:%S")
        self.current_time_label.config(text="Current Time: " + current_time)
        self.root.after(1000, self.update_current_time)

    def set_alarm(self):
        alarm_time = self.time_entry.get()
        if self.validate_time_format(alarm_time):
            Thread(target=self.check_alarm, args=(alarm_time,)).start()
            self.set_alarm_button.config(state=tk.DISABLED)
            self.stop_alarm_button.config(state=tk.NORMAL)
        else:
            messagebox.showerror("Invalid Time Format", "Please enter time in HH:MM:SS format.")

    def validate_time_format(self, alarm_time):
        try:
            datetime.strptime(alarm_time, "%H:%M:%S")
            return True
        except ValueError:
            return False

    def check_alarm(self, alarm_time):
        while True:
            current_time = datetime.now().strftime("%H:%M:%S")
            if current_time == alarm_time:
                self.play_alarm_sound()
                messagebox.showinfo("Alarm", "Wake up Sivaaaa!")
                self.set_alarm_button.config(state=tk.NORMAL)
                self.stop_alarm_button.config(state=tk.DISABLED)
                break
            time.sleep(1)

    def play_alarm_sound(self):
        pygame.mixer.music.load("alarm_sound.mp3")  # Replace with your sound file path
        pygame.mixer.music.play(-1)  # Play the sound in a loop until stopped

    def stop_alarm(self):
        pygame.mixer.music.stop()

if __name__ == "__main__":
    root = tk.Tk()
    app = AlarmClock(root)
    root.mainloop()
